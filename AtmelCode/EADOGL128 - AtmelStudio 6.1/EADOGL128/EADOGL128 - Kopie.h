#ifndef EADOGL128_H
#define EADOGL128_H

#define F_CPU 8000000
#include <util/delay.h>
#include <avr/sbit.h>
#include <avr/io.h>
#include <math.h>
#include <avr/pgmspace.h>

#define LCD_CS SBIT(PORTD, 6)
#define LCD_RST SBIT(PORTD, 7)
#define LCD_A0 SBIT(PORTB, 0)
#define LCD_D SBIT(PORTD, 5)
#define LCD_CLK SBIT(PORTB, 7)

const uint8_t wecker [][24] PROGMEM = {		{0x0, 0x1, 0x18, 0xbc, 0xfe, 0xfe, 0x6f, 0x3f, 0x37, 0x1e, 0x1c, 0xf8, 0xf8, 0x18, 0x1e, 0x3f, 0x37, 0x7f, 0xfe, 0xde, 0xbc, 0x38, 0x0, 0x0},
{0x0, 0x0, 0xfe, 0xdf, 0x3, 0x0, 0x0, 0x80, 0x80, 0xc0, 0xe0, 0xff, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x7, 0xff, 0xfc, 0x0},
{0x0, 0x0, 0x3, 0xf, 0x1c, 0x38, 0x77, 0x63, 0xc3, 0xc1, 0xc0, 0xc0, 0x80, 0xc0, 0xc0, 0xc0, 0xe0, 0x60, 0x70, 0x38, 0x1e, 0x7, 0x1, 0x0}
};

//Initialisiert das Display
void lcdInit(); 

//Steuerwort senden
void sendCmd(uint8_t);

//Daten schreiben
void sendData(uint8_t);

//Reihe setzen c = {0..127}
//0x0:  leastSignificant bits werden gesendet
//0x10: mostSignificant bits werden gesendet
void setColumn(uint8_t);

//Page setzen p={0..7};
//0xB0: Page = 0;
void setPage(uint8_t);

//Alle Pixel ausschalten
void clearLCD();

//Pixel an x, y setzen
//x = {0..127}, y = {0..63}
//setzMaske ist nur "1" an der Stelle, wo der Pixel gesetzt werden soll
void setPixel(uint8_t, uint8_t);

//Pixelmaske auf LCD schreiben
void updateLCD();

void printSymbol(const uint8_t[][24], int, int);

#endif